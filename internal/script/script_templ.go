// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package script

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"

func ScrollTo(id string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_ScrollTo_cb26`,
		Function: `function __templ_ScrollTo_cb26(id){document.getElementById(id).scrollIntoView({ behavior: 'auto' });
}`,
		Call:       templ.SafeScript(`__templ_ScrollTo_cb26`, id),
		CallInline: templ.SafeScriptInline(`__templ_ScrollTo_cb26`, id),
	}
}

func HighlightPageNavigation() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_HighlightPageNavigation_5e8e`,
		Function: `function __templ_HighlightPageNavigation_5e8e(){let main = qs('#main'); // Assuming qs is a shorthand for querySelector
    let pagenavItems = qsa(".pagenav-item")
    let sections = qsa('.section')
    let debounceTimer;
    main.addEventListener('scroll', function() {
        clearTimeout(debounceTimer)// Clear the previous timeout if the event is fired again within the wait period
        debounceTimer = setTimeout(function() { // set a new timeout
            let scroll = main.scrollTop + qs('#header').offsetHeight + 100;
            let activeSection = null;
            if (scroll < sections[0].offsetTop) {
                activeSection = sections[0];
            } else {
                for (let i = 0; i < sections.length; i++) {
                    let section = sections[i];
                    let sectionTop = section.offsetTop;
                    let sectionBottom = sectionTop + section.offsetHeight;
                    if (scroll >= sectionTop && scroll <= sectionBottom) {
                        activeSection = sections[i];
                        break;
                    }
                }
            }
            if (activeSection) {
                let activeSectionID = activeSection.id;
                for (let i = 0; i < pagenavItems.length; i++) {
                    let pagenavItem = pagenavItems[i];
                    let sectionref = pagenavItem.getAttribute('sectionref');
                    if (sectionref === activeSectionID) {
                        pagenavItem.classList.add('text-blue-500');
                        pagenavItem.classList.remove('text-black');
                    } else {
                        pagenavItem.classList.add('text-black');
                        pagenavItem.classList.remove('text-blue-500');
                    }
                }
            }
        }, 100);
    });
}`,
		Call:       templ.SafeScript(`__templ_HighlightPageNavigation_5e8e`),
		CallInline: templ.SafeScriptInline(`__templ_HighlightPageNavigation_5e8e`),
	}
}
